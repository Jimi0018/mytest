#系统编码
txmock.debug=false
#Portal服务名
spring.application.name=biz-portal-server
server.port=7110
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
#\u65E5\u5FD7
logging.level.*=info
logging.path=../../logs/${spring.application.name}
info.app.name=${spring.application.name}
info.app.author=xicheng
info.app.version=3.0
info.version=3.0
#config
spring.cloud.config.name=${spring.application.name}
spring.cloud.config.label=${spring.application.name}
#\u542F\u52A8\u65F6\uFF0C\u5982\u679C \u8FDE\u63A5\u670D\u52A1\u7AEF\u6709\u9519\u3002\u63D0\u524D\u62A5\u9519
spring.cloud.config.fail-fast=false
#\u8FDE\u63A5\u914D\u7F6E\u4E2D\u5FC3\u662F\u5426\u4F7F\u7528 \u6CE8\u518C\u4E2D\u5FC3
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=COMMON-CONFIG
server.tomcat.uri-encoding=UTF-8
spring.mandatory-file-encoding=UTF-8
spring.pid.file=../../pids/${spring.application.name}.pid

#\u5173\u95ED\u91CD\u8BD5\u673A\u5236
spring.cloud.loadbalancer.retry.enabled=false
#ERUEKA
eureka.instance.instance-id=${spring.application.name}(${spring.cloud.client.ipAddress}:${server.port})
eureka.instance.appname=${spring.application.name}
eureka.instance.prefer-ip-address=true
# \u5F00\u542F\u5065\u5EB7\u68C0\u67E5
#eureka.client.healthcheck.enabled=true
# \u79DF\u671F\u66F4\u65B0\u65F6\u95F4\u95F4\u9694\uFF08\u9ED8\u8BA430\u79D2)
eureka.instance.lease-renewal-interval-in-seconds=10
#\u79DF\u671F\u5230\u671F\u65F6\u95F4\uFF08\u9ED8\u8BA490\u79D2\uFF09\u4E0D\u6015\u51FA\u9519\u7684\u8BDD\uFF0C\u65F6\u95F4\u53EF\u4EE5\u66F4\u77ED
eureka.instance.lease-expiration-duration-in-seconds=20
#\u5B89\u5168
management.security.enabled=false
#\u542F\u7528shutdown
endpoints.shutdown.enabled=true
#\u7981\u7528\u5BC6\u7801\u9A8C\u8BC1
endpoints.shutdown.sensitive=false
# 数据源设置
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@//10.10.5.24:1521/pay_3
spring.datasource.username=biz
spring.datasource.password=biz
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
######################################################


# auth service user details endpoint
security.oauth2.resource.user-info-uri=http://localhost:1200/permission/oauth/user
#security.oauth2.resource.user-info-uri=http://common-permission/permission/oauth/user
fdfs.connect-timeout=2000
fdfs.so-timeout=3000
fdfs.tracker-list=10.10.5.33:22122
mybatis.type-aliases-package=com.hnapay.portal.model.po
mybatis.mapper-locations=classpath:com/hnapay/portal/mapper/*.xml
# \u901A\u7528 Mapper \u914D\u7F6E
mapper.mappers=com.hnapay.portal.server.tool.MyMapper
mapper.not-empty=false
mapper.identity=ORACLE
#pagehelper
pagehelper.helperDialect=oracle
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
# 数据源设置
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
spring.datasource.logSlowSql=true
